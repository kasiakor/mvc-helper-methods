@model  HelperMethods.Models.Person

@{
    ViewBag.Title = "CreatePerson";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //helper methods add data attributes to html elements to support validation
    Html.EnableClientValidation(false);
    //Result<div class="dataElem"><label>PersonId</label><input id="personId" name="personId" type="text" value="0" /></div>
}



<h2> Create Person Form</h2>
@*name attr is use for model binding, input elements contain values for the model type properties*@

@*BeginForm helper method, controller, action, id for routing, form method, element attributes*@

@*action = "app/forms/Home/CreatePerson"*@
@*@using (Html.BeginRouteForm("RouteForm", FormMethod.Post, new { @class = "personClass", data_formType = "person" }))*@
@using (Html.BeginForm("CreatePerson", "Home", new { id = "MyIdValue" }, FormMethod.Post, new { @class = "personClass", data_formType = "person" }))

{
<form action="" method="post">

    <div class="dataElem">
        <label>PersonId</label>
        @*<input name="personId" value="@Model.PersonId" /> must match form value and model value *@
        @*@Html.TextBox("personId", @Model.PersonId)*@

        @*mvc fr searches for ViewBag.PersonId or @Model.PersonId to create input element*@
        @*@Html.TextBox("personId")*@
        @Html.EditorFor(m => m.PersonId)
    </div>
    <div class="dataElem">
        <label>FirstName</label>
        @*<input name="firstName" value="@Model.FirstName" />*@

        @*strongly typed input helpers, vmo is passed, its property is used to set the value attribute*@
        @Html.TextBoxFor(m => m.FirstName)
    </div>
    <div class="dataElem">
        <label>LastName</label>
        @*<input name="lastName" value="@Model.LastName" />*@
        @Html.TextBox("lastName", @Model.LastName)
    </div>

    <div class="dataElem">
        <label>Editor for BirthDay Date</label>
        @*@Html.Editor("Birthday")*@
        @Html.EditorFor(m => m.Birthday)
    </div>
    <div class="dataElem">
        <label>Role</label>
        @*<select data-val="true" data-val-required="The Role field is required." id="Role" name="Role"><option selected="selected">Admin</option>
            <option>User</option>
            <option>Guest</option>
            </select>*@
        @Html.DropDownListFor(m => m.Role, new SelectList(Enum.GetNames(typeof(HelperMethods.Models.Role))))
    </div>
    <input type="submit" value="Submit" />
</form>
}


@*<form action="/Home/CreatePerson/MyIdValue" class="personClass" data-formType="person" method="post">
    <form action="" method="post">

        <div class="dataElem">
            <label>PersonId</label>

            <input data-val="true" data-val-number="The field PersonId must be a number." data-val-required="The PersonId field is required." id="personId" name="personId" type="text" value="0" />
        </div>
        <div class="dataElem">
            <label>FirstName</label>

            <input id="firstName" name="firstName" type="text" value="" />
        </div>
        <div class="dataElem">
            <label>LastName</label>

            <input id="lastName" name="lastName" type="text" value="" />
        </div>
        <input type="submit" value="Submit" />
    </form>
</form>*@
